- name: [install, i]
  cmd:
    bash: |
      go run assetbuilder/build.go $(pwd)/assets && \
      go install -ldflags="-s -w" blunt.sh/wtfcmd/wtf
    powershell: |
      go run assetbuilder/build.go assets
      go install -ldflags="-s -w" blunt.sh/wtfcmd/wtf
  desc: Install the command

- name: [test, t]
  cmd: go test blunt.sh/wtfcmd/wtf
  desc: Start tests

- name: [format, f]
  cwd: ./wtf
  cmd:
    bash: gofmt -s -w *.go
    powershell: foreach ($file in get-ChildItem *.go) { gofmt -s -w $file.fullname }
  desc: Format go code

- group: [build, b]
  name: for-os
  args:
    - name: os
      desc: for which OS to build
      required: true
      is_array: true
  flags:
    - name: arch
      desc: for which architecture to build
      default: 386
  cmd:
    bash: |
      go run assetbuilder/build.go $(pwd)/assets
      {{- range .os}} && env GOOS={{esc .}} GOARCH={{esc $.arch}} go build -ldflags="-s -w" -o wtf.{{if eq . "windows"}}exe{{else}}{{.}}{{end}} blunt.sh/wtfcmd/wtf{{end}}
    powershell: |
      go run assetbuilder/build.go assets
      $env:GOOS = {{esc .os}}
      $env:GOARCH = {{esc .arch}}
      go build -ldflags="-s -w" -o wtf.{{if eq .os "windows"}}exe{{else}}{{.os}}{{end}} blunt.sh/wtfcmd/wtf
  desc: Build the command for any OS

- group: [build, b]
  name: [windows, w]
  cmd: wtf build for-os windows
  desc: Build the command for windows

- group: build
  name: [osx, o]
  cmd: wtf build for-os darwin
  desc: Build the command for osx

- group: build
  name: [linux, l]
  cmd: wtf build for-os linux
  desc: Build the command for linux