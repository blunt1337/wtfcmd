(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{26:function(e,t,s){e.exports=s(29)},29:function(e,t,s){"use strict";s.r(t);var r=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",[s("h1",{attrs:{id:"command-s-definition"}},[e._v("Command’s definition")]),e._v(" "),s("hr"),e._v(" "),e._m(0),e._v(" "),e._m(1),e._v(" "),s("p",[e._v("A configuration can override a command from a parent configuration if they share the same group and name.")]),e._v(" "),e._m(2),e._v(" "),s("hr"),e._v(" "),s("h1",{attrs:{id:"file-structure"}},[e._v("File structure")]),e._v(" "),s("p",[e._v("The .wtfcmd file must contain an array of "),s("router-link",{attrs:{to:"#commands"}},[e._v("command")]),e._v(" objects defined like bellow.")],1),e._v(" "),s("h2",{attrs:{id:"commands"}},[e._v("Commands")]),e._v(" "),s("p",[e._v("A command is an object with the following properties.")]),e._v(" "),s("h4",{attrs:{id:"group"}},[e._v("group")]),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),s("h4",{attrs:{id:"name"}},[e._v("name")]),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),s("h4",{attrs:{id:"desc"}},[e._v("desc")]),e._v(" "),e._m(7),e._v(" "),s("p",[e._v("Description can be either a string, or an array for multiple lines.")]),e._v(" "),s("h4",{attrs:{id:"cmd"}},[e._v("cmd")]),e._v(" "),e._m(8),e._v(" "),s("p",[s("router-link",{attrs:{to:"/template"}},[e._v("More info for the template section here")]),e._v("."),s("br"),e._v("\nString arrays will be concatenated with “\\n”."),s("br"),e._v("\nIf the command is compatible with bash/powershell, you can just write a string or string[] as a command,"),s("br"),e._v("\nbut for specific terminals, you can write an object like:")],1),e._v(" "),e._m(9),e._v(" "),s("h4",{attrs:{id:"cwd"}},[e._v("cwd")]),e._v(" "),e._m(10),e._v(" "),s("p",[e._v("Like commands, you can put one for “bash” and one for “powershell”.")]),e._v(" "),e._m(11),e._v(" "),e._m(12),e._v(" "),s("h4",{attrs:{id:"args"}},[e._v("args")]),e._v(" "),e._m(13),e._v(" "),s("p",[e._v("Arguments must contain an array of "),s("router-link",{attrs:{to:"#argument"}},[e._v("argument")]),e._v(" objects defined like below.")],1),e._v(" "),s("h4",{attrs:{id:"flags"}},[e._v("flags")]),e._v(" "),e._m(14),e._v(" "),s("p",[e._v("Flags must contain an array of "),s("router-link",{attrs:{to:"#flag"}},[e._v("flag")]),e._v(" objects defined like below.")],1),e._v(" "),s("hr"),e._v(" "),s("h3",{attrs:{id:"arguments"}},[e._v("Arguments")]),e._v(" "),e._m(15),e._v(" "),s("h4",{attrs:{id:"name-2"}},[e._v("name")]),e._v(" "),e._m(16),e._v(" "),e._m(17),e._v(" "),s("h4",{attrs:{id:"desc-2"}},[e._v("desc")]),e._v(" "),e._m(18),e._v(" "),s("p",[e._v("Description can be either a string, or an array for multiple lines.")]),e._v(" "),s("h4",{attrs:{id:"required"}},[e._v("required")]),e._v(" "),e._m(19),e._v(" "),s("p",[e._v("Set to true if the argument is required and should print an error if missing. Only first arguments can be required.")]),e._v(" "),s("h4",{attrs:{id:"default"}},[e._v("default")]),e._v(" "),e._m(20),e._v(" "),e._m(21),e._v(" "),s("h4",{attrs:{id:"is_array"}},[e._v("is_array")]),e._v(" "),e._m(22),e._v(" "),e._m(23),e._v(" "),s("h4",{attrs:{id:"test"}},[e._v("test")]),e._v(" "),e._m(24),e._v(" "),s("p",[e._v("The value is a string, and it can be:")]),e._v(" "),e._m(25),e._v(" "),s("hr"),e._v(" "),s("h3",{attrs:{id:"flags-2"}},[e._v("Flags")]),e._v(" "),e._m(26),e._v(" "),s("h4",{attrs:{id:"name-3"}},[e._v("name")]),e._v(" "),e._m(27),e._v(" "),e._m(28),e._v(" "),s("h4",{attrs:{id:"desc-3"}},[e._v("desc")]),e._v(" "),e._m(29),e._v(" "),s("p",[e._v("Description can be either a string, or an array for multiple lines.")]),e._v(" "),s("h4",{attrs:{id:"default-2"}},[e._v("default")]),e._v(" "),e._m(30),e._v(" "),e._m(31),e._v(" "),s("h4",{attrs:{id:"is_array-2"}},[e._v("is_array")]),e._v(" "),e._m(32),e._v(" "),e._m(33),e._v(" "),s("h4",{attrs:{id:"test-2"}},[e._v("test")]),e._v(" "),e._m(34),e._v(" "),s("p",[e._v("The value is a string, and it can be:")]),e._v(" "),e._m(35)])};r._withStripped=!0;var a=s(0),n=Object(a.a)(null,r,[function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Configuration files are stored in "),t("code",{pre:!0,attrs:{class:"hljs inline"}},[this._v(".wtfcmd.json")]),this._v(", "),t("code",{pre:!0,attrs:{class:"hljs inline"}},[this._v(".wtfcmd.yaml")]),this._v(" or "),t("code",{pre:!0,attrs:{class:"hljs inline"}},[this._v(".wtfcmd.yml")]),this._v(" files. They are loaded from each directory and parent directories from the current working dir.")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("For example, if you run "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("wtf")]),e._v(" in "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("/Users/blunt/projects")]),e._v(", it will try to load from "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("/Users/blunt/projects/.wtfcmd.ext")]),e._v(" and "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("/Users/blunt/.wtfcmd.ext")]),e._v(", and "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("/Users/.wtfcmd.ext")]),e._v(" and "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("/.wtfcmd.ext")]),e._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("To test your commands, you can put as first argument "),t("code",{pre:!0,attrs:{class:"hljs inline"}},[this._v("--debug")]),this._v(" to print the command before running it."),t("br"),this._v("\nFor example "),t("code",{pre:!0,attrs:{class:"hljs inline"}},[this._v("wtf --debug commandname arg1 arg2")]),this._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("group’s name "),t("em",[this._v("(optional)")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("To run the command it will be "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("wtf groupname name")]),e._v(". Without a group’s name it is just "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("wtf name")]),e._v("."),s("br"),e._v("\nGroup names can be either a string, or an array [“fullname”, “alias”]."),s("br"),e._v("\nOnly utf8 alphanumeric characters and "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v(":._-")]),e._v(" are allowed.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("command’s name "),t("em",[this._v("(required)")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("To run the command it will be "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("wtf name")]),e._v(", or "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("wtf groupname name")]),e._v(" if a group is mentioned."),s("br"),e._v("\nCommand names can be either a string, or an array [“fullname”, “a”], where ‘a’ is a one character alias."),s("br"),e._v("\nOnly utf8 alphanumeric characters and "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v(":._-")]),e._v(" are allowed.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("description or help message "),t("em",[this._v("(optional, but recommended)")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("command template "),t("em",[this._v("(required)")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("pre",{pre:!0,attrs:{class:"hljs"}},[s("code",{attrs:{"v-pre":""}},[e._v("{\n\t"),s("span",{attrs:{class:"hljs-attr"}},[e._v('"bash"')]),e._v(": [\n\t\t"),s("span",{attrs:{class:"hljs-string"}},[e._v('"echo this command will run in bash"')]),e._v(",\n\t\t"),s("span",{attrs:{class:"hljs-string"}},[e._v('"echo multilines works too"')]),e._v("\n\t],\n\t"),s("span",{attrs:{class:"hljs-attr"}},[e._v('"powershell"')]),e._v(": "),s("span",{attrs:{class:"hljs-string"}},[e._v('"echo this command will run with powershell.exe"')]),e._v("\n}\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("current working dir of the command "),t("em",[this._v("(optional)")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ul",[s("li",[s("p",[e._v("If it starts with a dot, it will run in the config’s directory + cwd."),s("br"),e._v("\nFor example, in /my_projects/wtfcmd.json, there is cwd = ./public; then running "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("wtf")]),e._v(" in /my_projects/awesome/, will put the current working dir to /my_projects/public")])]),e._v(" "),s("li",[s("p",[e._v("If it starts with ‘/’ or ‘x:’, an absolute path."),s("br"),e._v("\nFor example, in /my_projects/wtfcmd.json, there is cwd = /public; then running "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("wtf")]),e._v(" in /my_projects/awesome/, will put the current working dir to /public")])]),e._v(" "),s("li",[s("p",[e._v("If none of above, the directory where wtf was called + cwd."),s("br"),e._v("\nFor example, in /my_projects/wtfcmd.json, there is cwd = public; then running "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("wtf")]),e._v(" in /my_projects/awesome/, will put the current working dir to /my_projects/awesome/public")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The default is the current directory where "),t("code",{pre:!0,attrs:{class:"hljs inline"}},[this._v("wtf")]),this._v(" is executed."),t("br"),this._v("\nFor more complex cases, in the command you can use "),t("code",{pre:!0,attrs:{class:"hljs inline"}},[this._v("cd {{configdir}}")]),this._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("arguments "),t("em",[this._v("(optional)")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("flags "),t("em",[this._v("(optional)")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("Arguments are filled from the command line when they don’t start with "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("-")]),e._v("."),s("br"),e._v("\nFor example, "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("wtf cmdname arg1 arg2")]),e._v("."),s("br"),e._v("\nIf an argument starts with a "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("-")]),e._v(", you can stop flags parsing with "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("--")]),e._v("."),s("br"),e._v("\nFor example, "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("wtf cmdname --flag -- -arg1")]),e._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("argument name "),t("em",[this._v("(required)")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("It should be unique of course, and contain only utf8 alphanumeric characters and "),t("code",{pre:!0,attrs:{class:"hljs inline"}},[this._v(":._-")]),this._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("description or help message "),t("em",[this._v("(optional, but recommended)")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("required to run the command "),t("em",[this._v("(optional, default false)")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("default value if the argument is missing "),t("em",[this._v("(optional, default nil)")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The value if the argument is not required and not filled. Can be anything except an object."),t("br"),this._v("\nIf is_array is set and the default value is not an array, the default value will be inserted in an empty array.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("True if the value is an array "),t("em",[this._v("(optional, default false)")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Only the last argument can be an array."),t("br"),this._v("\nFor example "),t("code",{pre:!0,attrs:{class:"hljs inline"}},[this._v("wtf cmd a b c d")]),this._v(" can be 1 argument with "),t("code",{pre:!0,attrs:{class:"hljs inline"}},[this._v("[a, b, c, d]")]),this._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("test the value before running the command "),t("em",[this._v("(optional)")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ul",[s("li",[e._v("a regex like "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("^[a-z0-9]+$")]),e._v(", for case insensitive: "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("^(?i)[a-z0-9]+$")]),e._v(",")]),e._v(" "),s("li",[s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("$int")]),e._v(" to check for integers")]),e._v(" "),s("li",[s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("$uint")]),e._v(" to check for positive integers")]),e._v(" "),s("li",[s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("$bool")]),e._v(" to check for booleans (It accepts 1, t, TRUE, true, True, 0, f, F, FALSE, false, False)")]),e._v(" "),s("li",[s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("$float")]),e._v(" or “$number” to check for floating numbers")]),e._v(" "),s("li",[s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("$file")]),e._v(" to check for an existing files")]),e._v(" "),s("li",[s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("$dir")]),e._v(" to check for an existing directory")]),e._v(" "),s("li",[s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("$dir/file")]),e._v(" to check for an existing file or directory")]),e._v(" "),s("li",[s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("$json")]),e._v(" to check and parse the argument as a json object")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("Flags are filled from the command line when they start with "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("-")]),e._v("."),s("br"),e._v("\nIf the flag starts with a double "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("-")]),e._v(", it uses it’s full name."),s("br"),e._v("\nIf the flag starts with a single "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("-")]),e._v(", it uses it’s short name."),s("br"),e._v("\nFor example, a flag named "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v('["super", "s"]')]),e._v(" can be filled with "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("wtf cmdname --super value")]),e._v(" or "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("wtf cmdname -s value")]),e._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("flag name and alias "),t("em",[this._v("(required)")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("Can be either a string, or an array [“fullname”, “f”], where ‘f’ is the alias. Only UTF8 alphanumeric characters and "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v(":._-")]),e._v(" are allowed."),s("br"),e._v("\nCan be used with "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("--dir=value")]),e._v(", or "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("--dir value")]),e._v(", or "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("-d=value")]),e._v(", or "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("-d value")]),e._v(" (if not a boolean for the last one).")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("description or help message "),t("em",[this._v("(optional, but recommanded)")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("default value if the argument is missing "),t("em",[this._v("(optional, default nil)")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The default value if the flag not mentioned. Can be anything except an object."),t("br"),this._v("\nIf is_array is set and the default value is not an array, the default value will be inserted in an empty array.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("True if the value is an array "),t("em",[this._v("(optional, default false)")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Only the last argument can be an array."),t("br"),this._v("\nFor example "),t("code",{pre:!0,attrs:{class:"hljs inline"}},[this._v("wtf cmd --flag value 1 --flag value2")]),this._v(" make an array flag=[value1, value2].")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("test the value before running the command "),t("em",[this._v("(optional)")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ul",[s("li",[e._v("a regex like "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("^[a-z0-9]+$")]),e._v(", for case insensitive: "),s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("^(?i)[a-z0-9]+$")]),e._v(",")]),e._v(" "),s("li",[s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("$int")]),e._v(" to check for integers")]),e._v(" "),s("li",[s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("$uint")]),e._v(" to check for positive integers")]),e._v(" "),s("li",[s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("$bool")]),e._v(" to check for booleans (It accepts 1, t, TRUE, true, True, 0, f, F, FALSE, false, False)")]),e._v(" "),s("li",[s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("$float")]),e._v(" or “$number” to check for floating numbers")]),e._v(" "),s("li",[s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("$file")]),e._v(" to check for an existing files")]),e._v(" "),s("li",[s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("$dir")]),e._v(" to check for an existing directory")]),e._v(" "),s("li",[s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("$dir/file")]),e._v(" to check for an existing file or directory")]),e._v(" "),s("li",[s("code",{pre:!0,attrs:{class:"hljs inline"}},[e._v("$json")]),e._v(" to check and parse the argument as a json object")])])}],!1,null,null,null);n.options.__file="pages/02-command_definition.md",t.default=n.exports}}]);